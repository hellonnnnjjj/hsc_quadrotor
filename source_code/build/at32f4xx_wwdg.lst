ARM GAS  /tmp/ccLnM3wH.s 			page 1


   1              		.cpu cortex-m4
   2              		.eabi_attribute 27, 1
   3              		.eabi_attribute 28, 1
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 1
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.file	"at32f4xx_wwdg.c"
  14              		.text
  15              	.Ltext0:
  16              		.cfi_sections	.debug_frame
  17              		.section	.text.WWDG_Reset,"ax",%progbits
  18              		.align	1
  19              		.global	WWDG_Reset
  20              		.arch armv7e-m
  21              		.syntax unified
  22              		.thumb
  23              		.thumb_func
  24              		.fpu fpv4-sp-d16
  26              	WWDG_Reset:
  27              	.LFB123:
  28              		.file 1 "./lib/src/at32f4xx_wwdg.c"
   1:./lib/src/at32f4xx_wwdg.c **** /**
   2:./lib/src/at32f4xx_wwdg.c ****   **************************************************************************
   3:./lib/src/at32f4xx_wwdg.c ****   * File   : at32f4xx_wwdg.c
   4:./lib/src/at32f4xx_wwdg.c ****   * Version: V1.2.4
   5:./lib/src/at32f4xx_wwdg.c ****   * Date   : 2020-08-26
   6:./lib/src/at32f4xx_wwdg.c ****   * Brief  : at32f4xx WWDG source file
   7:./lib/src/at32f4xx_wwdg.c ****   **************************************************************************
   8:./lib/src/at32f4xx_wwdg.c ****   */
   9:./lib/src/at32f4xx_wwdg.c **** 
  10:./lib/src/at32f4xx_wwdg.c **** 
  11:./lib/src/at32f4xx_wwdg.c **** /* Includes ------------------------------------------------------------------*/
  12:./lib/src/at32f4xx_wwdg.c **** #include "at32f4xx_wwdg.h"
  13:./lib/src/at32f4xx_wwdg.c **** #include "at32f4xx_rcc.h"
  14:./lib/src/at32f4xx_wwdg.c **** 
  15:./lib/src/at32f4xx_wwdg.c **** /** @addtogroup at32f4xx_StdPeriph_Driver
  16:./lib/src/at32f4xx_wwdg.c ****   * @{
  17:./lib/src/at32f4xx_wwdg.c ****   */
  18:./lib/src/at32f4xx_wwdg.c **** 
  19:./lib/src/at32f4xx_wwdg.c **** /** @defgroup WWDG
  20:./lib/src/at32f4xx_wwdg.c ****   * @brief WWDG driver modules
  21:./lib/src/at32f4xx_wwdg.c ****   * @{
  22:./lib/src/at32f4xx_wwdg.c ****   */
  23:./lib/src/at32f4xx_wwdg.c **** 
  24:./lib/src/at32f4xx_wwdg.c **** /** @defgroup WWDG_Private_TypesDefinitions
  25:./lib/src/at32f4xx_wwdg.c ****   * @{
  26:./lib/src/at32f4xx_wwdg.c ****   */
  27:./lib/src/at32f4xx_wwdg.c **** 
  28:./lib/src/at32f4xx_wwdg.c **** /**
  29:./lib/src/at32f4xx_wwdg.c ****   * @}
  30:./lib/src/at32f4xx_wwdg.c ****   */
ARM GAS  /tmp/ccLnM3wH.s 			page 2


  31:./lib/src/at32f4xx_wwdg.c **** 
  32:./lib/src/at32f4xx_wwdg.c **** /** @defgroup WWDG_Private_Defines
  33:./lib/src/at32f4xx_wwdg.c ****   * @{
  34:./lib/src/at32f4xx_wwdg.c ****   */
  35:./lib/src/at32f4xx_wwdg.c **** 
  36:./lib/src/at32f4xx_wwdg.c **** /* ----------- WWDG registers bit address in the alias region ----------- */
  37:./lib/src/at32f4xx_wwdg.c **** #define WWDG_OFFSET         (WWDG_BASE - PERIPH_BASE)
  38:./lib/src/at32f4xx_wwdg.c **** 
  39:./lib/src/at32f4xx_wwdg.c **** /* Alias word address of EWI bit */
  40:./lib/src/at32f4xx_wwdg.c **** #define CFG_OFFSET          (WWDG_OFFSET + 0x04)
  41:./lib/src/at32f4xx_wwdg.c **** #define EWIEN_BitPos        0x09
  42:./lib/src/at32f4xx_wwdg.c **** #define CFG_EWIEN_BBMAP     (PERIPH_BB_BASE + (CFG_OFFSET * 32) + (EWIEN_BitPos * 4))
  43:./lib/src/at32f4xx_wwdg.c **** 
  44:./lib/src/at32f4xx_wwdg.c **** /* --------------------- WWDG registers bit mask ------------------------ */
  45:./lib/src/at32f4xx_wwdg.c **** 
  46:./lib/src/at32f4xx_wwdg.c **** /* CR register bit mask */
  47:./lib/src/at32f4xx_wwdg.c **** #define CTRL_EN_Set         ((uint32_t)0x00000080)
  48:./lib/src/at32f4xx_wwdg.c **** 
  49:./lib/src/at32f4xx_wwdg.c **** /* CFR register bit mask */
  50:./lib/src/at32f4xx_wwdg.c **** #define CFG_PSC_Mask        ((uint32_t)0xFFFFFE7F)
  51:./lib/src/at32f4xx_wwdg.c **** #define CFG_WCNTR_Mask      ((uint32_t)0xFFFFFF80)
  52:./lib/src/at32f4xx_wwdg.c **** #define BIT_Mask            ((uint8_t)0x7F)
  53:./lib/src/at32f4xx_wwdg.c **** 
  54:./lib/src/at32f4xx_wwdg.c **** /**
  55:./lib/src/at32f4xx_wwdg.c ****   * @}
  56:./lib/src/at32f4xx_wwdg.c ****   */
  57:./lib/src/at32f4xx_wwdg.c **** 
  58:./lib/src/at32f4xx_wwdg.c **** /** @defgroup WWDG_Private_Macros
  59:./lib/src/at32f4xx_wwdg.c ****   * @{
  60:./lib/src/at32f4xx_wwdg.c ****   */
  61:./lib/src/at32f4xx_wwdg.c **** 
  62:./lib/src/at32f4xx_wwdg.c **** /**
  63:./lib/src/at32f4xx_wwdg.c ****   * @}
  64:./lib/src/at32f4xx_wwdg.c ****   */
  65:./lib/src/at32f4xx_wwdg.c **** 
  66:./lib/src/at32f4xx_wwdg.c **** /** @defgroup WWDG_Private_Variables
  67:./lib/src/at32f4xx_wwdg.c ****   * @{
  68:./lib/src/at32f4xx_wwdg.c ****   */
  69:./lib/src/at32f4xx_wwdg.c **** 
  70:./lib/src/at32f4xx_wwdg.c **** /**
  71:./lib/src/at32f4xx_wwdg.c ****   * @}
  72:./lib/src/at32f4xx_wwdg.c ****   */
  73:./lib/src/at32f4xx_wwdg.c **** 
  74:./lib/src/at32f4xx_wwdg.c **** /** @defgroup WWDG_Private_FunctionPrototypes
  75:./lib/src/at32f4xx_wwdg.c ****   * @{
  76:./lib/src/at32f4xx_wwdg.c ****   */
  77:./lib/src/at32f4xx_wwdg.c **** 
  78:./lib/src/at32f4xx_wwdg.c **** /**
  79:./lib/src/at32f4xx_wwdg.c ****   * @}
  80:./lib/src/at32f4xx_wwdg.c ****   */
  81:./lib/src/at32f4xx_wwdg.c **** 
  82:./lib/src/at32f4xx_wwdg.c **** /** @defgroup WWDG_Private_Functions
  83:./lib/src/at32f4xx_wwdg.c ****   * @{
  84:./lib/src/at32f4xx_wwdg.c ****   */
  85:./lib/src/at32f4xx_wwdg.c **** 
  86:./lib/src/at32f4xx_wwdg.c **** /**
  87:./lib/src/at32f4xx_wwdg.c ****   * @brief  Deinitializes the WWDG peripheral registers to their default reset values.
ARM GAS  /tmp/ccLnM3wH.s 			page 3


  88:./lib/src/at32f4xx_wwdg.c ****   * @param  None
  89:./lib/src/at32f4xx_wwdg.c ****   * @retval None
  90:./lib/src/at32f4xx_wwdg.c ****   */
  91:./lib/src/at32f4xx_wwdg.c **** void WWDG_Reset(void)
  92:./lib/src/at32f4xx_wwdg.c **** {
  29              		.loc 1 92 1 view -0
  30              		.cfi_startproc
  31              		@ args = 0, pretend = 0, frame = 0
  32              		@ frame_needed = 0, uses_anonymous_args = 0
  33 0000 08B5     		push	{r3, lr}
  34              	.LCFI0:
  35              		.cfi_def_cfa_offset 8
  36              		.cfi_offset 3, -8
  37              		.cfi_offset 14, -4
  93:./lib/src/at32f4xx_wwdg.c ****   RCC_APB1PeriphResetCmd(RCC_APB1PERIPH_WWDG, ENABLE);
  38              		.loc 1 93 3 view .LVU1
  39 0002 0121     		movs	r1, #1
  40 0004 4FF40060 		mov	r0, #2048
  41 0008 FFF7FEFF 		bl	RCC_APB1PeriphResetCmd
  42              	.LVL0:
  94:./lib/src/at32f4xx_wwdg.c ****   RCC_APB1PeriphResetCmd(RCC_APB1PERIPH_WWDG, DISABLE);
  43              		.loc 1 94 3 view .LVU2
  44 000c 0021     		movs	r1, #0
  45 000e 4FF40060 		mov	r0, #2048
  46 0012 FFF7FEFF 		bl	RCC_APB1PeriphResetCmd
  47              	.LVL1:
  95:./lib/src/at32f4xx_wwdg.c **** }
  48              		.loc 1 95 1 is_stmt 0 view .LVU3
  49 0016 08BD     		pop	{r3, pc}
  50              		.cfi_endproc
  51              	.LFE123:
  53              		.section	.text.WWDG_SetPrescaler,"ax",%progbits
  54              		.align	1
  55              		.global	WWDG_SetPrescaler
  56              		.syntax unified
  57              		.thumb
  58              		.thumb_func
  59              		.fpu fpv4-sp-d16
  61              	WWDG_SetPrescaler:
  62              	.LVL2:
  63              	.LFB124:
  96:./lib/src/at32f4xx_wwdg.c **** 
  97:./lib/src/at32f4xx_wwdg.c **** /**
  98:./lib/src/at32f4xx_wwdg.c ****   * @brief  Sets the WWDG Prescaler.
  99:./lib/src/at32f4xx_wwdg.c ****   * @param  WWDG_Prescaler: specifies the WWDG Prescaler.
 100:./lib/src/at32f4xx_wwdg.c ****   *   This parameter can be one of the following values:
 101:./lib/src/at32f4xx_wwdg.c ****   *     @arg WWDG_Psc_1: WWDG counter clock = (PCLK1/4096)/1
 102:./lib/src/at32f4xx_wwdg.c ****   *     @arg WWDG_Psc_2: WWDG counter clock = (PCLK1/4096)/2
 103:./lib/src/at32f4xx_wwdg.c ****   *     @arg WWDG_Psc_4: WWDG counter clock = (PCLK1/4096)/4
 104:./lib/src/at32f4xx_wwdg.c ****   *     @arg WWDG_Psc_8: WWDG counter clock = (PCLK1/4096)/8
 105:./lib/src/at32f4xx_wwdg.c ****   * @retval None
 106:./lib/src/at32f4xx_wwdg.c ****   */
 107:./lib/src/at32f4xx_wwdg.c **** void WWDG_SetPrescaler(uint32_t WWDG_Prescaler)
 108:./lib/src/at32f4xx_wwdg.c **** {
  64              		.loc 1 108 1 is_stmt 1 view -0
  65              		.cfi_startproc
  66              		@ args = 0, pretend = 0, frame = 0
ARM GAS  /tmp/ccLnM3wH.s 			page 4


  67              		@ frame_needed = 0, uses_anonymous_args = 0
  68              		@ link register save eliminated.
 109:./lib/src/at32f4xx_wwdg.c ****   uint32_t tmpreg = 0;
  69              		.loc 1 109 3 view .LVU5
 110:./lib/src/at32f4xx_wwdg.c ****   /* Check the parameters */
 111:./lib/src/at32f4xx_wwdg.c ****   assert_param(IS_WWDG_PSC(WWDG_Prescaler));
  70              		.loc 1 111 3 view .LVU6
 112:./lib/src/at32f4xx_wwdg.c ****   /* Clear WDGTB[1:0] bits */
 113:./lib/src/at32f4xx_wwdg.c ****   tmpreg = WWDG->CFG & CFG_PSC_Mask;
  71              		.loc 1 113 3 view .LVU7
  72              		.loc 1 113 16 is_stmt 0 view .LVU8
  73 0000 034A     		ldr	r2, .L4
  74 0002 5368     		ldr	r3, [r2, #4]
  75              		.loc 1 113 10 view .LVU9
  76 0004 23F4C073 		bic	r3, r3, #384
  77              	.LVL3:
 114:./lib/src/at32f4xx_wwdg.c ****   /* Set WDGTB[1:0] bits according to WWDG_Prescaler value */
 115:./lib/src/at32f4xx_wwdg.c ****   tmpreg |= WWDG_Prescaler;
  78              		.loc 1 115 3 is_stmt 1 view .LVU10
  79              		.loc 1 115 10 is_stmt 0 view .LVU11
  80 0008 0343     		orrs	r3, r3, r0
  81              	.LVL4:
 116:./lib/src/at32f4xx_wwdg.c ****   /* Store the new value */
 117:./lib/src/at32f4xx_wwdg.c ****   WWDG->CFG = tmpreg;
  82              		.loc 1 117 3 is_stmt 1 view .LVU12
  83              		.loc 1 117 13 is_stmt 0 view .LVU13
  84 000a 5360     		str	r3, [r2, #4]
 118:./lib/src/at32f4xx_wwdg.c **** }
  85              		.loc 1 118 1 view .LVU14
  86 000c 7047     		bx	lr
  87              	.L5:
  88 000e 00BF     		.align	2
  89              	.L4:
  90 0010 002C0040 		.word	1073753088
  91              		.cfi_endproc
  92              	.LFE124:
  94              		.section	.text.WWDG_SetWindowCounter,"ax",%progbits
  95              		.align	1
  96              		.global	WWDG_SetWindowCounter
  97              		.syntax unified
  98              		.thumb
  99              		.thumb_func
 100              		.fpu fpv4-sp-d16
 102              	WWDG_SetWindowCounter:
 103              	.LVL5:
 104              	.LFB125:
 119:./lib/src/at32f4xx_wwdg.c **** 
 120:./lib/src/at32f4xx_wwdg.c **** /**
 121:./lib/src/at32f4xx_wwdg.c ****   * @brief  Sets the WWDG window value.
 122:./lib/src/at32f4xx_wwdg.c ****   * @param  WindowValue: specifies the window value to be compared to the downcounter.
 123:./lib/src/at32f4xx_wwdg.c ****   *   This parameter value must be lower than 0x80.
 124:./lib/src/at32f4xx_wwdg.c ****   * @retval None
 125:./lib/src/at32f4xx_wwdg.c ****   */
 126:./lib/src/at32f4xx_wwdg.c **** void WWDG_SetWindowCounter(uint8_t WindowValue)
 127:./lib/src/at32f4xx_wwdg.c **** {
 105              		.loc 1 127 1 is_stmt 1 view -0
 106              		.cfi_startproc
ARM GAS  /tmp/ccLnM3wH.s 			page 5


 107              		@ args = 0, pretend = 0, frame = 8
 108              		@ frame_needed = 0, uses_anonymous_args = 0
 109              		@ link register save eliminated.
 110              		.loc 1 127 1 is_stmt 0 view .LVU16
 111 0000 82B0     		sub	sp, sp, #8
 112              	.LCFI1:
 113              		.cfi_def_cfa_offset 8
 128:./lib/src/at32f4xx_wwdg.c ****   __IO uint32_t tmpreg = 0;
 114              		.loc 1 128 3 is_stmt 1 view .LVU17
 115              		.loc 1 128 17 is_stmt 0 view .LVU18
 116 0002 0023     		movs	r3, #0
 117 0004 0193     		str	r3, [sp, #4]
 129:./lib/src/at32f4xx_wwdg.c **** 
 130:./lib/src/at32f4xx_wwdg.c ****   /* Check the parameters */
 131:./lib/src/at32f4xx_wwdg.c ****   assert_param(IS_WWDG_WCNTR(WindowValue));
 118              		.loc 1 131 3 is_stmt 1 view .LVU19
 132:./lib/src/at32f4xx_wwdg.c ****   /* Clear W[6:0] bits */
 133:./lib/src/at32f4xx_wwdg.c **** 
 134:./lib/src/at32f4xx_wwdg.c ****   tmpreg = WWDG->CFG & CFG_WCNTR_Mask;
 119              		.loc 1 134 3 view .LVU20
 120              		.loc 1 134 16 is_stmt 0 view .LVU21
 121 0006 074A     		ldr	r2, .L8
 122 0008 5368     		ldr	r3, [r2, #4]
 123              		.loc 1 134 22 view .LVU22
 124 000a 23F07F03 		bic	r3, r3, #127
 125              		.loc 1 134 10 view .LVU23
 126 000e 0193     		str	r3, [sp, #4]
 135:./lib/src/at32f4xx_wwdg.c **** 
 136:./lib/src/at32f4xx_wwdg.c ****   /* Set W[6:0] bits according to WindowValue value */
 137:./lib/src/at32f4xx_wwdg.c ****   tmpreg |= WindowValue & (uint32_t) BIT_Mask;
 127              		.loc 1 137 3 is_stmt 1 view .LVU24
 128              		.loc 1 137 25 is_stmt 0 view .LVU25
 129 0010 00F07F00 		and	r0, r0, #127
 130              	.LVL6:
 131              		.loc 1 137 10 view .LVU26
 132 0014 019B     		ldr	r3, [sp, #4]
 133 0016 1843     		orrs	r0, r0, r3
 134 0018 0190     		str	r0, [sp, #4]
 138:./lib/src/at32f4xx_wwdg.c **** 
 139:./lib/src/at32f4xx_wwdg.c ****   /* Store the new value */
 140:./lib/src/at32f4xx_wwdg.c ****   WWDG->CFG = tmpreg;
 135              		.loc 1 140 3 is_stmt 1 view .LVU27
 136              		.loc 1 140 13 is_stmt 0 view .LVU28
 137 001a 019B     		ldr	r3, [sp, #4]
 138 001c 5360     		str	r3, [r2, #4]
 141:./lib/src/at32f4xx_wwdg.c **** }
 139              		.loc 1 141 1 view .LVU29
 140 001e 02B0     		add	sp, sp, #8
 141              	.LCFI2:
 142              		.cfi_def_cfa_offset 0
 143              		@ sp needed
 144 0020 7047     		bx	lr
 145              	.L9:
 146 0022 00BF     		.align	2
 147              	.L8:
 148 0024 002C0040 		.word	1073753088
 149              		.cfi_endproc
ARM GAS  /tmp/ccLnM3wH.s 			page 6


 150              	.LFE125:
 152              		.section	.text.WWDG_EnableINT,"ax",%progbits
 153              		.align	1
 154              		.global	WWDG_EnableINT
 155              		.syntax unified
 156              		.thumb
 157              		.thumb_func
 158              		.fpu fpv4-sp-d16
 160              	WWDG_EnableINT:
 161              	.LFB126:
 142:./lib/src/at32f4xx_wwdg.c **** 
 143:./lib/src/at32f4xx_wwdg.c **** /**
 144:./lib/src/at32f4xx_wwdg.c ****   * @brief  Enables the WWDG Early Wakeup interrupt(EWI).
 145:./lib/src/at32f4xx_wwdg.c ****   * @param  None
 146:./lib/src/at32f4xx_wwdg.c ****   * @retval None
 147:./lib/src/at32f4xx_wwdg.c ****   */
 148:./lib/src/at32f4xx_wwdg.c **** void WWDG_EnableINT(void)
 149:./lib/src/at32f4xx_wwdg.c **** {
 162              		.loc 1 149 1 is_stmt 1 view -0
 163              		.cfi_startproc
 164              		@ args = 0, pretend = 0, frame = 0
 165              		@ frame_needed = 0, uses_anonymous_args = 0
 166              		@ link register save eliminated.
 150:./lib/src/at32f4xx_wwdg.c ****   *(__IO uint32_t *) CFG_EWIEN_BBMAP = (uint32_t)ENABLE;
 167              		.loc 1 150 3 view .LVU31
 168              		.loc 1 150 38 is_stmt 0 view .LVU32
 169 0000 024B     		ldr	r3, .L11
 170 0002 0122     		movs	r2, #1
 171 0004 C3F8A420 		str	r2, [r3, #164]
 151:./lib/src/at32f4xx_wwdg.c **** }
 172              		.loc 1 151 1 view .LVU33
 173 0008 7047     		bx	lr
 174              	.L12:
 175 000a 00BF     		.align	2
 176              	.L11:
 177 000c 00800542 		.word	1107656704
 178              		.cfi_endproc
 179              	.LFE126:
 181              		.section	.text.WWDG_SetCounter,"ax",%progbits
 182              		.align	1
 183              		.global	WWDG_SetCounter
 184              		.syntax unified
 185              		.thumb
 186              		.thumb_func
 187              		.fpu fpv4-sp-d16
 189              	WWDG_SetCounter:
 190              	.LVL7:
 191              	.LFB127:
 152:./lib/src/at32f4xx_wwdg.c **** 
 153:./lib/src/at32f4xx_wwdg.c **** /**
 154:./lib/src/at32f4xx_wwdg.c ****   * @brief  Sets the WWDG counter value.
 155:./lib/src/at32f4xx_wwdg.c ****   * @param  Counter: specifies the watchdog counter value.
 156:./lib/src/at32f4xx_wwdg.c ****   *   This parameter must be a number between 0x40 and 0x7F.
 157:./lib/src/at32f4xx_wwdg.c ****   * @retval None
 158:./lib/src/at32f4xx_wwdg.c ****   */
 159:./lib/src/at32f4xx_wwdg.c **** void WWDG_SetCounter(uint8_t Counter)
 160:./lib/src/at32f4xx_wwdg.c **** {
ARM GAS  /tmp/ccLnM3wH.s 			page 7


 192              		.loc 1 160 1 is_stmt 1 view -0
 193              		.cfi_startproc
 194              		@ args = 0, pretend = 0, frame = 0
 195              		@ frame_needed = 0, uses_anonymous_args = 0
 196              		@ link register save eliminated.
 161:./lib/src/at32f4xx_wwdg.c ****   /* Check the parameters */
 162:./lib/src/at32f4xx_wwdg.c ****   assert_param(IS_WWDG_CNTR(Counter));
 197              		.loc 1 162 3 view .LVU35
 163:./lib/src/at32f4xx_wwdg.c ****   /* Write to T[6:0] bits to configure the counter value, no need to do
 164:./lib/src/at32f4xx_wwdg.c ****      a read-modify-write; writing a 0 to WDGA bit does nothing */
 165:./lib/src/at32f4xx_wwdg.c ****   WWDG->CTRL = Counter & BIT_Mask;
 198              		.loc 1 165 3 view .LVU36
 199              		.loc 1 165 24 is_stmt 0 view .LVU37
 200 0000 00F07F00 		and	r0, r0, #127
 201              	.LVL8:
 202              		.loc 1 165 14 view .LVU38
 203 0004 014B     		ldr	r3, .L14
 204 0006 1860     		str	r0, [r3]
 166:./lib/src/at32f4xx_wwdg.c **** }
 205              		.loc 1 166 1 view .LVU39
 206 0008 7047     		bx	lr
 207              	.L15:
 208 000a 00BF     		.align	2
 209              	.L14:
 210 000c 002C0040 		.word	1073753088
 211              		.cfi_endproc
 212              	.LFE127:
 214              		.section	.text.WWDG_Enable,"ax",%progbits
 215              		.align	1
 216              		.global	WWDG_Enable
 217              		.syntax unified
 218              		.thumb
 219              		.thumb_func
 220              		.fpu fpv4-sp-d16
 222              	WWDG_Enable:
 223              	.LVL9:
 224              	.LFB128:
 167:./lib/src/at32f4xx_wwdg.c **** 
 168:./lib/src/at32f4xx_wwdg.c **** /**
 169:./lib/src/at32f4xx_wwdg.c ****   * @brief  Enables WWDG and load the counter value.
 170:./lib/src/at32f4xx_wwdg.c ****   * @param  Counter: specifies the watchdog counter value.
 171:./lib/src/at32f4xx_wwdg.c ****   *   This parameter must be a number between 0x40 and 0x7F.
 172:./lib/src/at32f4xx_wwdg.c ****   * @retval None
 173:./lib/src/at32f4xx_wwdg.c ****   */
 174:./lib/src/at32f4xx_wwdg.c **** void WWDG_Enable(uint8_t Counter)
 175:./lib/src/at32f4xx_wwdg.c **** {
 225              		.loc 1 175 1 is_stmt 1 view -0
 226              		.cfi_startproc
 227              		@ args = 0, pretend = 0, frame = 0
 228              		@ frame_needed = 0, uses_anonymous_args = 0
 229              		@ link register save eliminated.
 176:./lib/src/at32f4xx_wwdg.c ****   /* Check the parameters */
 177:./lib/src/at32f4xx_wwdg.c ****   assert_param(IS_WWDG_CNTR(Counter));
 230              		.loc 1 177 3 view .LVU41
 178:./lib/src/at32f4xx_wwdg.c ****   WWDG->CTRL = CTRL_EN_Set | Counter;
 231              		.loc 1 178 3 view .LVU42
 232              		.loc 1 178 28 is_stmt 0 view .LVU43
ARM GAS  /tmp/ccLnM3wH.s 			page 8


 233 0000 40F08000 		orr	r0, r0, #128
 234              	.LVL10:
 235              		.loc 1 178 14 view .LVU44
 236 0004 014B     		ldr	r3, .L17
 237 0006 1860     		str	r0, [r3]
 179:./lib/src/at32f4xx_wwdg.c **** }
 238              		.loc 1 179 1 view .LVU45
 239 0008 7047     		bx	lr
 240              	.L18:
 241 000a 00BF     		.align	2
 242              	.L17:
 243 000c 002C0040 		.word	1073753088
 244              		.cfi_endproc
 245              	.LFE128:
 247              		.section	.text.WWDG_GetFlagStatus,"ax",%progbits
 248              		.align	1
 249              		.global	WWDG_GetFlagStatus
 250              		.syntax unified
 251              		.thumb
 252              		.thumb_func
 253              		.fpu fpv4-sp-d16
 255              	WWDG_GetFlagStatus:
 256              	.LFB129:
 180:./lib/src/at32f4xx_wwdg.c **** 
 181:./lib/src/at32f4xx_wwdg.c **** /**
 182:./lib/src/at32f4xx_wwdg.c ****   * @brief  Checks whether the Early Wakeup interrupt flag is set or not.
 183:./lib/src/at32f4xx_wwdg.c ****   * @param  None
 184:./lib/src/at32f4xx_wwdg.c ****   * @retval The new state of the Early Wakeup interrupt flag (SET or RESET)
 185:./lib/src/at32f4xx_wwdg.c ****   */
 186:./lib/src/at32f4xx_wwdg.c **** FlagStatus WWDG_GetFlagStatus(void)
 187:./lib/src/at32f4xx_wwdg.c **** {
 257              		.loc 1 187 1 is_stmt 1 view -0
 258              		.cfi_startproc
 259              		@ args = 0, pretend = 0, frame = 0
 260              		@ frame_needed = 0, uses_anonymous_args = 0
 261              		@ link register save eliminated.
 188:./lib/src/at32f4xx_wwdg.c ****   return (FlagStatus)(WWDG->STS);
 262              		.loc 1 188 3 view .LVU47
 263              		.loc 1 188 27 is_stmt 0 view .LVU48
 264 0000 014B     		ldr	r3, .L20
 265 0002 9868     		ldr	r0, [r3, #8]
 189:./lib/src/at32f4xx_wwdg.c **** }
 266              		.loc 1 189 1 view .LVU49
 267 0004 C0B2     		uxtb	r0, r0
 268 0006 7047     		bx	lr
 269              	.L21:
 270              		.align	2
 271              	.L20:
 272 0008 002C0040 		.word	1073753088
 273              		.cfi_endproc
 274              	.LFE129:
 276              		.section	.text.WWDG_ClearFlag,"ax",%progbits
 277              		.align	1
 278              		.global	WWDG_ClearFlag
 279              		.syntax unified
 280              		.thumb
 281              		.thumb_func
ARM GAS  /tmp/ccLnM3wH.s 			page 9


 282              		.fpu fpv4-sp-d16
 284              	WWDG_ClearFlag:
 285              	.LFB130:
 190:./lib/src/at32f4xx_wwdg.c **** 
 191:./lib/src/at32f4xx_wwdg.c **** /**
 192:./lib/src/at32f4xx_wwdg.c ****   * @brief  Clears Early Wakeup interrupt flag.
 193:./lib/src/at32f4xx_wwdg.c ****   * @param  None
 194:./lib/src/at32f4xx_wwdg.c ****   * @retval None
 195:./lib/src/at32f4xx_wwdg.c ****   */
 196:./lib/src/at32f4xx_wwdg.c **** void WWDG_ClearFlag(void)
 197:./lib/src/at32f4xx_wwdg.c **** {
 286              		.loc 1 197 1 is_stmt 1 view -0
 287              		.cfi_startproc
 288              		@ args = 0, pretend = 0, frame = 0
 289              		@ frame_needed = 0, uses_anonymous_args = 0
 290              		@ link register save eliminated.
 198:./lib/src/at32f4xx_wwdg.c ****   WWDG->STS = (uint32_t)RESET;
 291              		.loc 1 198 3 view .LVU51
 292              		.loc 1 198 13 is_stmt 0 view .LVU52
 293 0000 014B     		ldr	r3, .L23
 294 0002 0022     		movs	r2, #0
 295 0004 9A60     		str	r2, [r3, #8]
 199:./lib/src/at32f4xx_wwdg.c **** }
 296              		.loc 1 199 1 view .LVU53
 297 0006 7047     		bx	lr
 298              	.L24:
 299              		.align	2
 300              	.L23:
 301 0008 002C0040 		.word	1073753088
 302              		.cfi_endproc
 303              	.LFE130:
 305              		.text
 306              	.Letext0:
 307              		.file 2 "/usr/lib/gcc/arm-none-eabi/10.3.1/include/stdint.h"
 308              		.file 3 "CMSIS/at32f4xx.h"
 309              		.file 4 "lib/inc/at32f4xx_rcc.h"
ARM GAS  /tmp/ccLnM3wH.s 			page 10


DEFINED SYMBOLS
                            *ABS*:0000000000000000 at32f4xx_wwdg.c
     /tmp/ccLnM3wH.s:18     .text.WWDG_Reset:0000000000000000 $t
     /tmp/ccLnM3wH.s:26     .text.WWDG_Reset:0000000000000000 WWDG_Reset
     /tmp/ccLnM3wH.s:54     .text.WWDG_SetPrescaler:0000000000000000 $t
     /tmp/ccLnM3wH.s:61     .text.WWDG_SetPrescaler:0000000000000000 WWDG_SetPrescaler
     /tmp/ccLnM3wH.s:90     .text.WWDG_SetPrescaler:0000000000000010 $d
     /tmp/ccLnM3wH.s:95     .text.WWDG_SetWindowCounter:0000000000000000 $t
     /tmp/ccLnM3wH.s:102    .text.WWDG_SetWindowCounter:0000000000000000 WWDG_SetWindowCounter
     /tmp/ccLnM3wH.s:148    .text.WWDG_SetWindowCounter:0000000000000024 $d
     /tmp/ccLnM3wH.s:153    .text.WWDG_EnableINT:0000000000000000 $t
     /tmp/ccLnM3wH.s:160    .text.WWDG_EnableINT:0000000000000000 WWDG_EnableINT
     /tmp/ccLnM3wH.s:177    .text.WWDG_EnableINT:000000000000000c $d
     /tmp/ccLnM3wH.s:182    .text.WWDG_SetCounter:0000000000000000 $t
     /tmp/ccLnM3wH.s:189    .text.WWDG_SetCounter:0000000000000000 WWDG_SetCounter
     /tmp/ccLnM3wH.s:210    .text.WWDG_SetCounter:000000000000000c $d
     /tmp/ccLnM3wH.s:215    .text.WWDG_Enable:0000000000000000 $t
     /tmp/ccLnM3wH.s:222    .text.WWDG_Enable:0000000000000000 WWDG_Enable
     /tmp/ccLnM3wH.s:243    .text.WWDG_Enable:000000000000000c $d
     /tmp/ccLnM3wH.s:248    .text.WWDG_GetFlagStatus:0000000000000000 $t
     /tmp/ccLnM3wH.s:255    .text.WWDG_GetFlagStatus:0000000000000000 WWDG_GetFlagStatus
     /tmp/ccLnM3wH.s:272    .text.WWDG_GetFlagStatus:0000000000000008 $d
     /tmp/ccLnM3wH.s:277    .text.WWDG_ClearFlag:0000000000000000 $t
     /tmp/ccLnM3wH.s:284    .text.WWDG_ClearFlag:0000000000000000 WWDG_ClearFlag
     /tmp/ccLnM3wH.s:301    .text.WWDG_ClearFlag:0000000000000008 $d

UNDEFINED SYMBOLS
RCC_APB1PeriphResetCmd
